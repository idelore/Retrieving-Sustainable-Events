# -*- coding: utf-8 -*-
"""
Created on Sun Sep 29 11:09:44 2019

@author: Ignacio de Lorenzo
"""


import pandas as pd
import warnings
warnings.filterwarnings("ignore")
import re, string


#Ok, we import the events and the Keywords used

resultadolen=0
positivos=0

palabrasclaves = pd.read_excel('keywordsods.xlsx', sheet_name='Tabla')
eventos=pd.read_excel('eventos de Harvard.xlsx', sheet_name='Harvard')
resultado= eventos.copy(deep=True)
odsp=[ ]

sdgall=list(pd.unique(palabrasclaves['SDG']))

#This function would prepare de text for analysis

def palabreador (text):
    text=re.sub('[%s]' % re.escape(string.punctuation), '', text)
    text=text.lower()
    text = " ".join(text.split())
    return text


#First, we search for the words directly in the events. We sum the results

for sdg in sdgall:
    odsp=[]
    pods=list(palabrasclaves[palabrasclaves['SDG']==sdg]["Key"])
    podslen=len(pods)
    # Iteración por filas del DataFrame:
    for indice_fila, fila in eventos.iterrows():
        positivos=0
        desc=palabreador(fila["descrip"])
        for palabra in pods:
            palabra=palabra.lower()
            if desc.find(" " + palabra + " ")!=-1:
                positivos=positivos + 1
        ppositivos=positivos
        odsp[len(odsp):] = [ppositivos]
    resultado[sdg]=odsp
    print("---------------------")
    print(pods)
    print(ppositivos)
    
resultadopos=eventos.copy(deep=True)


#Second, we establish a threshold and we check if the number of word frequency 
# is enough. We mark the events, for every SDG, with 1 if positive.

umbral=0.05

for sdg in sdgall:
    odsp=[]
    pods=list(palabrasclaves[palabrasclaves['SDG']==sdg]["Key"])
    podslen=len(pods)
    print(sdg)
    for indice_fila, fila in resultado.iterrows():
        print("---------->" + str(indice_fila))
        print (fila[sdg])
        poractivo=fila[sdg]/podslen
        print(poractivo)
        if poractivo>umbral:
            resultadopos.loc[indice_fila,sdg]=1
            print("Positivo")
        else:
            resultadopos.loc[indice_fila,sdg]=0
            print("Negativo")


#In case we need to know what word was detected, we also create a dataframe
#with this information

resultadopor=resultado.copy(deep=True)

for sdg in sdgall:
    odsp=[]
    pods=list(palabrasclaves[palabrasclaves['SDG']==sdg]["Key"])
    podslen=len(pods)
    print(sdg)
    for indice_fila, fila in resultado.iterrows():
        print(indice_fila)
        poractivo=(fila[sdg]/podslen)*10
        print(poractivo)
        resultadopor.loc[indice_fila,sdg]=poractivo
        
        
# Considering how many words has every SDG, we calculate a percentage of
#the word present.

resultadopalabras=eventos.copy(deep=True)

for sdg in sdgall:
    pods=list(palabrasclaves[palabrasclaves['SDG']==sdg]["Key"])
    podslen=len(pods)
    # Iteración por filas del DataFrame:
    for palabra in pods:
        odsp=[]
        palabra=palabra.lower()
        positivos=0
        for indice_fila, fila in eventos.iterrows():
            desc=palabreador(fila["descrip"])
            desc=str(desc).lower()
            if desc.find(" " + palabra + " ")!=-1:
                positivos=desc.count(" " + palabra + " ")
            ppositivos=positivos
            odsp[len(odsp):] = [ppositivos]
        nomsdg=str(sdg)+"-"+ str(palabra)
        resultadopalabras[nomsdg]=odsp
    print("---------------------")
    
#We export all the data.

with pd.ExcelWriter('analisis eventos ODS Harvard.xlsx') as writer: 
    resultado.to_excel(writer, sheet_name='Número de palabras')
    resultadopos.to_excel(writer, sheet_name='Porcentaje umbral ' + str(umbral))  
    resultadopor.to_excel(writer, sheet_name='Porcentaje')
    resultadopalabras.to_excel(writer, sheet_name='Palabras') 
    
#In order to use the data in the Data Studio, we need to melt the dataframe and export

resultadobuscador=pd.melt(resultado,value_vars=['SDG 01', 'SDG 02', 'SDG 03', 'SDG 04', 'SDG 05', 'SDG 06', 'SDG 07',
       'SDG 08', 'SDG 09', 'SDG 10', 'SDG 11', 'SDG 12', 'SDG 13', 'SDG 14',
       'SDG 15', 'SDG 16', 'SDG 17'],id_vars=['Id', 'title', 'title2', 'descrip', 'web', 'date'])

resultadobuscador.to_excel("buscador Harvard.xlsx", sheet_name='Número de palabras')
